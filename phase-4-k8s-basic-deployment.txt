Phase 4.1 – Kubernetes Setup (Minikube + kubectl)
✅ 1. Install Minikube (on Windows):
Use Chocolatey (recommended):
==================================================================================================

Set up Minikube in Windows
	download from https://kubernetes.io/docs/tasks/tools/
	place file under>C:\minikube\minikube 
	   (mostly rename file to minikube)
	 edit environment System variable path and add ->  C:\minikube -> OK 
 
	 cmd>minikube version
	 
	 minikube version: v1.36.0


Set up kubectl on windows
   https://kubernetes.io/releases/download/#binaries
  place downloaded under > C:\kubectl folder
  edit environment System variable path and add ->  C:\kubectl -> OK 
   
   C:\Users\DELL>kubectl version --client
   Client Version: v1.30.5
-------------------------------------------------------------------------------------- 

✅ 2. Start Minikube

minikube start --driver=docker

✅ 3. Confirm it's running

kubectl get nodes
kubectl cluster-info

🛠 Phase 4.2 – Create K8s YAMLs
🗂 Files to create in your phase-4-k8s-basic-deployment branch:

==================================================================================================
🧾 k8s-deployment.yaml
==================================================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-container
          image: dockerjenkinsk8s:latest  # Image name used in Jenkins
          ports:
            - containerPort: 8080
==================================================================================================			
🧾 k8s-service.yaml
==================================================================================================
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
spec:
  type: NodePort
  selector:
    app: springboot-app
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
==================================================================================================	  
🚀 Phase 4.3 – Deploy to Minikube
From your project root directory:

Now Continue Fresh:
Set Docker to Minikube's environment:

	PS D:\SPTechZone\springboot-docker-jenkins-k8s> & minikube -p minikube docker-env | Invoke-Expression
	
	Re-run your Jenkins build from Jenkins UI (this builds the Docker image inside Minikube’s Docker)
	OR
	PS D:\SPTechZone\springboot-docker-jenkins-k8s> docker build -t dockerjenkinsk8s:latest .


Then re-apply Kubernetes configs:

PS D:\SPTechZone\springboot-docker-jenkins-k8s> kubectl apply -f k8s-deployment.yaml

PS D:\SPTechZone\springboot-docker-jenkins-k8s> kubectl apply -f k8s-service.yaml

Check with below command status ???RUNNING
PS D:\SPTechZone\springboot-docker-jenkins-k8s> kubectl get pods -w
NAME                              READY   STATUS    RESTARTS   AGE
springboot-app-566bb689b6-7cmk2   1/1     Running   0          47s


Check with:
	kubectl get pods
	kubectl get service

Then access with:
	minikube service springboot-service --url




kubectl apply -f k8s-deployment.yaml
kubectl apply -f k8s-service.yaml
kubectl get all
==================================================================================================
🌐 Phase 4.4 – Access the App

minikube service springboot-service --url
It will give a URL like:
http://127.0.0.1:30080

You can now open:
http://127.0.0.1:30080/message

✅ You’ve now containerized → pipelined → deployed to Kubernetes!

==================================================================================================
minikube service springboot-service --url
or
minikube service springboot-service

Clean Up All K8s Resources You Applied
🔥 Delete Deployment
	kubectl delete deployment springboot-app
🔥 Delete Service
	kubectl delete service springboot-service
🧼 Optional: Delete All Resources (if you want a full reset)
    kubectl delete all -l app=springboot-app
	
	kubectl delete pod springboot-app-566bb689b6-xv226
